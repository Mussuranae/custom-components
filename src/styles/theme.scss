@use 'sass:map';
@use '~@angular/material' as mat;
@import '~@angular/material/theming';
@include mat.core();

// Look at http://mcg.mbitson.com/#!?mcgpalette0=%233f51b5 to create color palette

$primary: (
  50: #eee6f0,
  100: #d4c2da,
  200: #b799c1,
  300: #9a70a8,
  400: #845195,
  500: #6e3282,
  600: #662d7a,
  700: #5b266f,
  800: #511f65,
  900: #3f1352,
  'A100': #d98cff,
  'A200': #c859ff,
  'A400': #b726ff,
  'A700': #ae0dff,
  contrast: (
    50: #3e3940,
    100: #3e3940,
    200: #3e3940,
    300: #3e3940,
    400: #d1c0d7,
    500: #d1c0d7,
    600: #d1c0d7,
    700: #d1c0d7,
    800: #d1c0d7,
    900: #d1c0d7,
    A100: #3e3940,
    A200: #3e3940,
    A400: #d1c0d7,
    A700: #d1c0d7,
  )
);

$secondary: (
  50: #f9e7ed,
  100: #efc2d1,
  200: #e59ab3,
  300: #db7195,
  400: #d3527e,
  500: #cb3467,
  600: #c62f5f,
  700: #be2754,
  800: #b8214a,
  900: #ac1539,
  'A100': #ffdee5,
  'A200': #ffabbc,
  'A400': #ff7894,
  'A700': #ff5e7f,
  contrast: (
    50: #432d35,
    100: #432d35,
    200: #432d35,
    300: #432d35,
    400: #eec1cf,
    500: #eec1cf,
    600: #eec1cf,
    700: #eec1cf,
    800: #eec1cf,
    900: #eec1cf,
    A100: #432d35,
    A200: #432d35,
    A400: #432d35,
    A700: #432d35,
  )
);

$warn: (
  50: #fbe2ea,
  100: #f4b7ca,
  200: #ed88a7,
  300: #e65884,
  400: #e03469,
  500: #db104f,
  600: #d70e48,
  700: #d20c3f,
  800: #cd0936,
  900: #c40526,
  'A100': #ffedef,
  'A200': #ffbac3,
  'A400': #ff8796,
  'A700': #ff6e7f,
  contrast: (
    50: #441a27,
    100: #441a27,
    200: #441a27,
    300: #441a27,
    400: #f3b7c8,
    500: #f3b7c8,
    600: #f3b7c8,
    700: #f3b7c8,
    800: #f3b7c8,
    900: #f3b7c8,
    A100: #441a27,
    A200: #441a27,
    A400: #441a27,
    A700: #441a27,
  )
);

$primary-palette: mat.define-palette($primary, 500);
$accent-palette: mat.define-palette($secondary);
$warn-palette: mat.define-palette($warn);

$background-config: (
  status-bar: map.get($primary-palette, 300),
  app-bar:    map.get($primary-palette, 100),
  background: map.get($primary-palette, 50),
  hover:      rgba(black, 0.04),
  card:       white,
  dialog:     white,
  disabled-button: rgba(black, 0.12),
  raised-button: white,
  focused-button: rgba(black, 0.12),
  selected-button: map.get($primary-palette, 300),
  selected-disabled-button: map.get($primary-palette, 400),
  disabled-button-toggle: map.get($primary-palette, 200),
  unselected-chip: map.get($primary-palette, 300),
  disabled-list-option: map.get($primary-palette, 200),
  tooltip: map.get($primary-palette, 700),
);

$foreground-config: (
  base:              black,
  divider:           rgba(black, 0.12),
  dividers:          rgba(black, 0.12),
  disabled:          rgba(black, 0.38),
  disabled-button:   rgba(black, 0.26),
  disabled-text:     rgba(black, 0.38),
  elevation:         black,
  hint-text:         rgba(black, 0.38),
  secondary-text:    rgba(black, 0.54),
  icon:              rgba(black, 0.54),
  icons:             rgba(black, 0.54),
  text:              rgba(black, 0.87),
  slider-min:        rgba(black, 0.87),
  slider-off:        rgba(black, 0.26),
  slider-off-active: rgba(black, 0.38),
);

$my-theme: mat.define-light-theme((
 color: (
   primary: $primary-palette,
   accent: $accent-palette,
   warn: $warn-palette,
   background: $background-config,
   foreground: $foreground-config
 )
));

/**
* Emit theme-dependent styles for common features used across multiple components.
* Add for every component we use the theme associated or use the *mat.all-component-themes* to style everything
* This second solution generate a lot of unused SCSS code if we don't use every AM component
*/
@include mat.core-theme($my-theme);
@include mat.button-theme($my-theme);
@include mat.datepicker-theme($my-theme);
@include mat.form-field-theme($my-theme);
@include mat.icon-theme($my-theme);
@include mat.input-theme($my-theme);
@include mat.menu-theme($my-theme);
@include mat.select-theme($my-theme);
@include mat.toolbar-theme($my-theme);
